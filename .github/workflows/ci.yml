name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    # Enables manual trigger from GitHub Actions UI

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Generate coverage report
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: |
        mkdir -p dist
        cp -r index.html *.js css js images dist/
    
    - name: Deploy to production
      env:
        FTP_SERVER: ${{ secrets.FTP_SERVER }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        npm install ftp-deploy
        echo "Creating test file for deployment..."
        mkdir -p dist
        echo "Test deployment $(date)" > dist/test.html
        
        echo "Starting deployment with debug mode..."
        node -e "
          const FtpDeploy = require('ftp-deploy');
          const ftpDeploy = new FtpDeploy();
          
          // Enable debugging
          ftpDeploy.on('uploaded', function(data) {
            console.log('Uploaded: ' + data.filename);
          });
          
          ftpDeploy.on('upload-error', function(data) {
            console.log('Upload error: ' + data.filename + ' - ' + data.err);
          });
          
          const config = {
            user: process.env.FTP_USERNAME,
            password: process.env.FTP_PASSWORD,
            host: process.env.FTP_SERVER,
            port: 21,
            localRoot: __dirname + '/dist/',
            remoteRoot: '',
            include: ['*', '**/*'],
            exclude: [],
            deleteRemote: false,
            forcePasv: true
          };
          
          console.log('Starting FTP deployment with configuration:');
          console.log('Host: ' + config.host);
          console.log('Username: ' + config.user);
          console.log('Remote Path: ' + (config.remoteRoot || '(default FTP directory)'));
          
          ftpDeploy.deploy(config)
            .then(res => console.log('Deployment complete!'))
            .catch(err => {
              console.error('Deployment failed:', err);
              process.exit(1);
            });
        " 